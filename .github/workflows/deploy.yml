name: Build & Deploy

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Check out your portfolio-site repo
      - uses: actions/checkout@v3

      # 2. (If you use a submodule) initialize it
      # - run: git submodule update --init --recursive

      # 3. Install Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.x'

      # 4. Build your stream-overlay app
      - name: Build stream-overlay
        run: |
          cd stream-overlay
          go mod tidy
          go build -o ../build/stream-overlay-server ./cmd/stream-overlay

      # 5. Copy static assets (HTML, JS, CSS, sounds) into build area
      - name: Copy static web files
        run: |
          mkdir -p build/stream-overlay-web
          cp -R stream-overlay/web build/stream-overlay-web

      # 6. (Optional) You can add version info
      - name: Write VERSION file
        run: echo "$(git rev-parse --short HEAD)" > build/VERSION

      # 7. Deploy step (whatever you already have configuredâ€”
      #    e.g. rsync to EC2, `aws s3 sync`, Elastic Beanstalk, etc.)
      - name: Deploy to AWS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          # Example: sync to an S3 bucket or copy binaries to EC2
          aws s3 sync build s3://my-bucket/stream-overlay
